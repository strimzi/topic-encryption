<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>strimzi.io</groupId>
  <artifactId>topic-encryption</artifactId>
  <packaging>pom</packaging>
  <version>0.0.1-SNAPSHOT</version>
  
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <name>Strimzi Topic Encryption</name>
    <description>Provides encryption-at-rest at the granularity of a topic through an encrypting proxy.</description>
    <url>https://github.com/strimzi/topic-encryption</url>

    <scm>
        <connection>scm:git:git://github.com/strimzi/topic-encryption.git</connection>
        <developerConnection>scm:git:ssh://github.com:strimzi/topic-encryption.git</developerConnection>
        <url>https://github.com/strimzi/topic-encryption</url>
    </scm>
	
    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/strimzi/topic-encryption/issues</url>
    </issueManagement>

    <developers>
        <developer>
            <name>Chris Giblin</name>
            <email>cgi@zurich.ibm.comtbentley@redhat.com</email>
            <organization>IBM Research - Zurich</organization>
            <organizationUrl>https://www.zurich.ibm.com/</organizationUrl>
        </developer>
    </developers>

  <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <maven.compiler.version>3.8.1</maven.compiler.version>
        <maven.surefire.version>3.0.0-M5</maven.surefire.version>
        <maven.failsafe.version>3.0.0-M5</maven.failsafe.version>
        <maven.assembly.version>3.3.0</maven.assembly.version>
        <maven.shade.version>3.1.0</maven.shade.version>
        <maven.javadoc.version>3.1.0</maven.javadoc.version>
        <maven.source.version>3.0.1</maven.source.version>
        <maven.dependency.version>3.1.1</maven.dependency.version>
        <maven.gpg.version>1.6</maven.gpg.version>
        <maven.checkstyle.version>3.1.2</maven.checkstyle.version>
        <checkstyle.version>9.2.1</checkstyle.version>
        <spotbugs.version>4.5.3</spotbugs.version>
        <sonatype.nexus.staging>1.6.3</sonatype.nexus.staging>
        <jacoco.version>0.7.9</jacoco.version>
        <maven-jar-plugin.version>3.1.0</maven-jar-plugin.version>
        <!-- 
        <sundrio.version>0.40.1</sundrio.version>
        <fabric8.kubernetes-client.version>5.12.0</fabric8.kubernetes-client.version>
        <fabric8.openshift-client.version>5.12.0</fabric8.openshift-client.version>
        <fabric8.kubernetes-model.version>5.12.0</fabric8.kubernetes-model.version>
        <fabric8.zjsonpatch.version>0.3.0</fabric8.zjsonpatch.version>
        -->
        <vertx.version>4.2.4</vertx.version>
        <vertx-junit5.version>4.2.4</vertx-junit5.version>
        <!-- 
        <vertx.kafka.client>4.2.4</vertx.kafka.client>
         -->
        <log4j.version>2.17.2</log4j.version>
        <hamcrest.version>2.2</hamcrest.version>
        <valid4j.version>1.1</valid4j.version>
        <fasterxml.jackson-core.version>2.12.6</fasterxml.jackson-core.version>
        <fasterxml.jackson-databind.version>2.12.6</fasterxml.jackson-databind.version>
        <fasterxml.jackson-dataformat.version>2.12.6</fasterxml.jackson-dataformat.version>
        <fasterxml.jackson-annotations.version>2.12.6</fasterxml.jackson-annotations.version>
        <kafka.version>2.8.0</kafka.version>
        <!-- keep in-sync with dataformat-yaml -->
        <json-path.version>4.1.1</json-path.version>
        
        <!-- 
        <zkclient.version>0.11</zkclient.version>
        <scala-library.version>2.13.6</scala-library.version>
        <zookeeper.version>3.6.3</zookeeper.version>
        <mockito.version>2.28.2</mockito.version>
         -->
        <jayway-jsonpath.version>2.6.0</jayway-jsonpath.version>
        <slf4j.version>1.7.36</slf4j.version>
        
        <!-- 
        <quartz.version>2.3.2</quartz.version>
        <jaeger.version>1.6.0</jaeger.version>
        <opentracing.version>0.33.0</opentracing.version>
        <opentracing-kafka.version>0.1.13</opentracing-kafka.version>
        <strimzi-oauth.version>0.10.0</strimzi-oauth.version>
        <strimzi-test-container.version>0.101.0</strimzi-test-container.version>
        <commons-codec.version>1.13</commons-codec.version>
        <registry.version>1.3.2.Final</registry.version>
         -->
        <javax.json-api.version>1.1.4</javax.json-api.version>
        <javax.json.version>1.1.4</javax.json.version>
        
        <!-- 
        <rest-assured.version>4.4.0</rest-assured.version>
        <rest-assured-json-path.version>4.4.0</rest-assured-json-path.version>
         -->
         
        <jupiter.version>5.8.2</jupiter.version>
        <junit.platform.version>1.8.2</junit.platform.version>
        <junit-platform-surefire-provider.version>1.3.2</junit-platform-surefire-provider.version>
        <opentest4j.version>1.2.0</opentest4j.version>
        <gson.version>2.8.2</gson.version>
        <exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
        <netty.version>4.1.74.Final</netty.version>
        <micrometer.version>1.3.1</micrometer.version>
        <bouncycastle.version>1.69</bouncycastle.version>
        <!-- property to skip surefire tests during failsafe execution -->
        <!--suppress UnresolvedMavenProperty -->
        <skip.surefire.tests>${skipTests}</skip.surefire.tests>
  
  <!-- 
        <opentracing-kafka.version>0.1.11</opentracing-kafka.version>
        <jaeger.version>1.1.0</jaeger.version>
        <junit.version>4.13.1</junit.version>
   -->
  </properties>  

    <modules>
        <module>encmod</module>
        <module>vertx-proxy</module>
    </modules>

    <dependencyManagement>
        <dependencies>
        
        <!-- 
            <dependency>
                <groupId>io.strimzi</groupId>
                <artifactId>crd-annotations</artifactId>
                <version>${project.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>io.strimzi</groupId>
                <artifactId>crd-generator</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.strimzi</groupId>
                <artifactId>config-model</artifactId>
                <version>${project.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>io.strimzi</groupId>
                <artifactId>test</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.strimzi</groupId>
                <artifactId>mockkube</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.strimzi</groupId>
                <artifactId>api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.strimzi</groupId>
                <artifactId>operator-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.strimzi</groupId>
                <artifactId>api</artifactId>
                <version>${project.version}</version>
                <classifier>tests</classifier>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.strimzi</groupId>
                <artifactId>operator-common</artifactId>
                <version>${project.version}</version>
                <classifier>tests</classifier>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.sundr</groupId>
                <artifactId>builder-annotations</artifactId>
                <version>${sundrio.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.sun</groupId>
                        <artifactId>tools</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>kubernetes-client</artifactId>
                <version>${fabric8.kubernetes-client.version}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>kubernetes-model</artifactId>
                <version>${fabric8.kubernetes-model.version}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>kubernetes-model-extensions</artifactId>
                <version>${fabric8.kubernetes-model.version}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>kubernetes-model-core</artifactId>
                <version>${fabric8.kubernetes-model.version}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>kubernetes-model-common</artifactId>
                <version>${fabric8.kubernetes-model.version}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>kubernetes-model-rbac</artifactId>
                <version>${fabric8.kubernetes-model.version}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>kubernetes-model-apps</artifactId>
                <version>${fabric8.kubernetes-model.version}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>kubernetes-model-apiextensions</artifactId>
                <version>${fabric8.kubernetes-model.version}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>kubernetes-model-networking</artifactId>
                <version>${fabric8.kubernetes-model.version}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>kubernetes-model-policy</artifactId>
                <version>${fabric8.kubernetes-model.version}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>kubernetes-model-storageclass</artifactId>
                <version>${fabric8.kubernetes-model.version}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>kubernetes-model-batch</artifactId>
                <version>${fabric8.kubernetes-model.version}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>openshift-model</artifactId>
                <version>${fabric8.kubernetes-model.version}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>openshift-client</artifactId>
                <version>${fabric8.openshift-client.version}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>openshift-server-mock</artifactId>
                <version>${fabric8.kubernetes-client.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>zjsonpatch</artifactId>
                <version>${fabric8.zjsonpatch.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            -->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_2.13</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            
            <!-- 
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zookeeper.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>netty</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>jline</groupId>
                        <artifactId>jline</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-annotations</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper-jute</artifactId>
                <version>${zookeeper.version}</version>
            </dependency>
            <dependency>
                <groupId>com.101tec</groupId>
                <artifactId>zkclient</artifactId>
                <version>${zkclient.version}</version>
            </dependency>
             -->
             
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala-library.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${fasterxml.jackson-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${fasterxml.jackson-annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${fasterxml.jackson-databind.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>${fasterxml.jackson-dataformat.version}</version>
            </dependency>
            <dependency>
                <!-- transitive dep; override here to avoid buggy version -->
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-csv</artifactId>
                <version>${fasterxml.jackson-dataformat.version}</version>
            </dependency>
            <dependency>
                <!-- transitive dep; override here to avoid buggy version -->
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jdk11</artifactId>
                <version>${fasterxml.jackson-core.version}</version>
            </dependency>
            <dependency>
                <!-- transitive dep; override here to avoid buggy version -->
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-jaxb-annotations</artifactId>
                <version>${fasterxml.jackson-core.version}</version>
            </dependency>
            <dependency>
                <!-- transitive dep; override here to avoid buggy version -->
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-paranamer</artifactId>
                <version>${fasterxml.jackson-core.version}</version>
            </dependency>
            <dependency>
                <!-- transitive dep; override here to avoid buggy version -->
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-scala_2.13</artifactId>
                <version>${fasterxml.jackson-core.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-core</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <!-- transitive dep; override here to avoid buggy version -->
                <groupId>io.netty</groupId>
                <artifactId>netty-common</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <!-- transitive dep; override here to avoid buggy version -->
                <groupId>io.netty</groupId>
                <artifactId>netty-buffer</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <!-- transitive dep; override here to avoid buggy version -->
                <groupId>io.netty</groupId>
                <artifactId>netty-transport</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <!-- transitive dep; override here to avoid buggy version -->
                <groupId>io.netty</groupId>
                <artifactId>netty-handler</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <!-- transitive dep; override here to avoid buggy version -->
                <groupId>io.netty</groupId>
                <artifactId>netty-codec</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <!-- transitive dep; override here to avoid buggy version -->
                <groupId>io.netty</groupId>
                <artifactId>netty-handler-proxy</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <!-- transitive dep; override here to avoid buggy version -->
                <groupId>io.netty</groupId>
                <artifactId>netty-codec-socks</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <!-- transitive dep; override here to avoid buggy version -->
                <groupId>io.netty</groupId>
                <artifactId>netty-codec-http</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <!-- transitive dep; override here to avoid buggy version -->
                <groupId>io.netty</groupId>
                <artifactId>netty-codec-http2</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <!-- transitive dep; override here to avoid buggy version -->
                <groupId>io.netty</groupId>
                <artifactId>netty-codec-dns</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <!-- transitive dep; override here to avoid buggy version -->
                <groupId>io.netty</groupId>
                <artifactId>netty-resolver</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <!-- transitive dep; override here to avoid buggy version -->
                <groupId>io.netty</groupId>
                <artifactId>netty-resolver-dns</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <!-- transitive dep; override here to avoid buggy version -->
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-epoll</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <!-- transitive dep; override here to avoid buggy version -->
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-unix-common</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-epoll</artifactId>
                <version>${netty.version}</version>
                <classifier>linux-x86_64</classifier>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-web-common</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-web-client</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.strimzi</groupId>
                <artifactId>certificate-manager</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>${quartz.version}</version>
            </dependency>
            <dependency>
                <!-- transitive dep; override here to avoid buggy version -->
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>
            <!-- 
            <dependency>
                <groupId>io.apicurio</groupId>
                <artifactId>apicurio-registry-utils-streams</artifactId>
                <version>${registry.version}</version>
            </dependency>
            <dependency>
                <groupId>io.apicurio</groupId>
                <artifactId>apicurio-registry-utils-kafka</artifactId>
                <version>${registry.version}</version>
            </dependency>
            <dependency>
                <groupId>io.apicurio</groupId>
                <artifactId>apicurio-registry-common</artifactId>
                <version>${registry.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-streams</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>io.strimzi</groupId>
                <artifactId>strimzi-test-container</artifactId>
                <version>${strimzi-test-container.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-core</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.valid4j</groupId>
                <artifactId>json-path-matchers</artifactId>
                <version>${valid4j.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-annotations</artifactId>
                <version>${spotbugs.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>io.jaegertracing</groupId>
                <artifactId>jaeger-core</artifactId>
                <version>${jaeger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-api</artifactId>
                <version>${opentracing.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-util</artifactId>
                <version>${opentracing.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>connect-runtime</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>connect-json</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>connect-file</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>connect-api</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>io.strimzi</groupId>
                <artifactId>kafka-oauth-server</artifactId>
                <version>${strimzi-oauth.version}</version>
            </dependency>
            <dependency>
                <groupId>io.strimzi</groupId>
                <artifactId>kafka-oauth-server-plain</artifactId>
                <version>${strimzi-oauth.version}</version>
            </dependency>
            <dependency>
                <groupId>io.strimzi</groupId>
                <artifactId>kafka-oauth-client</artifactId>
                <version>${strimzi-oauth.version}</version>
            </dependency>
            <dependency>
                <groupId>io.strimzi</groupId>
                <artifactId>kafka-oauth-common</artifactId>
                <version>${strimzi-oauth.version}</version>
            </dependency>
            <dependency>
                <groupId>io.strimzi</groupId>
                <artifactId>kafka-oauth-keycloak-authorizer</artifactId>
                <version>${strimzi-oauth.version}</version>
            </dependency>
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path</artifactId>
                <version>${jayway-jsonpath.version}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-core</artifactId>
                <version>${micrometer.version}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-prometheus</artifactId>
                <version>${micrometer.version}</version>
            </dependency>
             -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${jupiter.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.apiguardian</groupId>
                        <artifactId>apiguardian-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-junit5</artifactId>
                <version>${vertx-junit5.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-micrometer-metrics</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-commons</artifactId>
                <version>${junit.platform.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-launcher</artifactId>
                <version>${junit.platform.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

<!-- 
  <dependencies>
  	<dependency>
  		<groupId>org.apache.kafka</groupId>
  		<artifactId>kafka-clients</artifactId>
  		<version>${kafka.version}</version>
  	</dependency>
  	<dependency>
       <groupId>org.slf4j</groupId>
       <artifactId>slf4j-api</artifactId>
       <version>${slf4j.version}</version>
    </dependency>
    <dependency>
       <groupId>org.apache.logging.log4j</groupId>
       <artifactId>log4j-api</artifactId>
       <version>${log4j.version}</version>
    </dependency>
    <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
    </dependency>    
  </dependencies>
-->
  
</project>
